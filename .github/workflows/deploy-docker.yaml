name: Deploy to docker
on:
  push:
    tags:
      - '*'
jobs:
  debian-bullseye:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Retrieve Version
        run: |
          echo "::set-output name=current-version::$(cat Cargo.toml | grep "^version = \".*\"$" | sed -E 's/version = \"(.+)\"/\1/')"
        id: package-version

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            alesharik/cronized:${{ steps.package-version.outputs.current-version }}-bullseye
            alesharik/cronized:bullseye
          build-args: |
            builder=rust:1-bullseye
            img=debian:bullseye

  debian-bullseye-slim:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Retrieve Version
        run: |
          echo "::set-output name=current-version::$(cat Cargo.toml | grep "^version = \".*\"$" | sed -E 's/version = \"(.+)\"/\1/')"
        id: package-version

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            alesharik/cronized:${{ steps.package-version.outputs.current-version }}-bullseye-slim
            alesharik/cronized:bullseye-slim
          build-args: |
            builder=rust:1-slim-bullseye
            img=debian:bullseye-slim

  debian-bookworm:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Retrieve Version
        run: |
          echo "::set-output name=current-version::$(cat Cargo.toml | grep "^version = \".*\"$" | sed -E 's/version = \"(.+)\"/\1/')"
        id: package-version

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            alesharik/cronized:${{ steps.package-version.outputs.current-version }}-bookworm
            alesharik/cronized:bookworm
          build-args: |
            builder=rust:1-bookworm
            img=debian:bookworm

  debian-bookworm-slim:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Retrieve Version
        run: |
          echo "::set-output name=current-version::$(cat Cargo.toml | grep "^version = \".*\"$" | sed -E 's/version = \"(.+)\"/\1/')"
        id: package-version

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            alesharik/cronized:${{ steps.package-version.outputs.current-version }}-bookworm-slim
            alesharik/cronized:bookworm-slim
          build-args: |
            builder=rust:1-slim-bookworm
            img=debian:bookworm-slim

  alpine:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Retrieve Version
        run: |
          echo "::set-output name=current-version::$(cat Cargo.toml | grep "^version = \".*\"$" | sed -E 's/version = \"(.+)\"/\1/')"
        id: package-version

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile.alpine
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            alesharik/cronized:${{ steps.package-version.outputs.current-version }}-alpine
            alesharik/cronized:alpine
          build-args: |
            builder=rust:1-alpine
            img=alpine:latest